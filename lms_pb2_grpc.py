# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lms_pb2 as lms__pb2


class LMSStub(object):
    """The LMS service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterStudent = channel.unary_unary(
                '/lms.LMS/RegisterStudent',
                request_serializer=lms__pb2.RegisterRequest.SerializeToString,
                response_deserializer=lms__pb2.RegisterResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/lms.LMS/Login',
                request_serializer=lms__pb2.LoginRequest.SerializeToString,
                response_deserializer=lms__pb2.LoginResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/lms.LMS/Get',
                request_serializer=lms__pb2.GetRequest.SerializeToString,
                response_deserializer=lms__pb2.GetResponse.FromString,
                )
        self.Post = channel.unary_unary(
                '/lms.LMS/Post',
                request_serializer=lms__pb2.PostRequest.SerializeToString,
                response_deserializer=lms__pb2.PostResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/lms.LMS/Logout',
                request_serializer=lms__pb2.LogoutRequest.SerializeToString,
                response_deserializer=lms__pb2.LogoutResponse.FromString,
                )
        self.GetUsers = channel.unary_unary(
                '/lms.LMS/GetUsers',
                request_serializer=lms__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=lms__pb2.GetUsersResponse.FromString,
                )


class LMSServicer(object):
    """The LMS service definition
    """

    def RegisterStudent(self, request, context):
        """Register a new student
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Login for both students and teachers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Generic GET request to retrieve various data like assignments, submissions, grades, etc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Post(self, request, context):
        """Generic POST request to submit assignments, add doubts, grade, etc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Logout from the system
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LMSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterStudent,
                    request_deserializer=lms__pb2.RegisterRequest.FromString,
                    response_serializer=lms__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=lms__pb2.LoginRequest.FromString,
                    response_serializer=lms__pb2.LoginResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=lms__pb2.GetRequest.FromString,
                    response_serializer=lms__pb2.GetResponse.SerializeToString,
            ),
            'Post': grpc.unary_unary_rpc_method_handler(
                    servicer.Post,
                    request_deserializer=lms__pb2.PostRequest.FromString,
                    response_serializer=lms__pb2.PostResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=lms__pb2.LogoutRequest.FromString,
                    response_serializer=lms__pb2.LogoutResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=lms__pb2.GetUsersRequest.FromString,
                    response_serializer=lms__pb2.GetUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lms.LMS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LMS(object):
    """The LMS service definition
    """

    @staticmethod
    def RegisterStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/RegisterStudent',
            lms__pb2.RegisterRequest.SerializeToString,
            lms__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Login',
            lms__pb2.LoginRequest.SerializeToString,
            lms__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Get',
            lms__pb2.GetRequest.SerializeToString,
            lms__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Post(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Post',
            lms__pb2.PostRequest.SerializeToString,
            lms__pb2.PostResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/Logout',
            lms__pb2.LogoutRequest.SerializeToString,
            lms__pb2.LogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lms.LMS/GetUsers',
            lms__pb2.GetUsersRequest.SerializeToString,
            lms__pb2.GetUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
