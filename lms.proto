syntax = "proto3";

package lms;

// The LMS service definition
service LMS {
    // Register a new student
    rpc RegisterStudent (RegisterRequest) returns (RegisterResponse);
    
    // Login for both students and teachers
    rpc Login (LoginRequest) returns (LoginResponse);
    
    // Generic GET request to retrieve various data like assignments, submissions, grades, etc.
    rpc Get (GetRequest) returns (GetResponse);

    // Generic POST request to submit assignments, add doubts, grade, etc.
    rpc Post (PostRequest) returns (PostResponse);

    // Logout from the system
    rpc Logout (LogoutRequest) returns (LogoutResponse);

    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
    rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
    rpc DownloadFile(DownloadFileRequest) returns (DownloadFileResponse);
    rpc CreateAssignment (AssignmentRequest) returns (AssignmentResponse);
    rpc GetAssignment (AssignmentQuery) returns (AssignmentDetails);
     // New RPC for viewing student's assignment submission
    rpc ViewSubmission(ViewSubmissionRequest) returns (ViewSubmissionResponse);
    rpc ViewQuestions (ViewQuestionsRequest) returns (ViewQuestionsResponse);  // New RPC method
   // rpc getLLMAnswer(LLMQueryRequest) returns (LLMQueryResponse);
    rpc CreateMaterial (MaterialRequest) returns (MaterialResponse);
}
message LLMQueryRequest {
    string question = 1;
}

message LLMQueryResponse {
    string answer = 1;
}
service LLMService {
    // Existing methods

    // LLM query method
    rpc getLLMAnswer(LLMQueryRequest) returns (LLMQueryResponse);
}

// Request message for registering a new student
message RegisterRequest {
    string username = 1;
    string password = 2;
}

// Response message for registering a new student
message RegisterResponse {
    bool status = 1;
    string message = 2;
}

// Request message for logging in
message LoginRequest {
    string username = 1;
    string password = 2;
}

// Response message for logging in
message LoginResponse {
    bool status = 1;
    string token = 2;
    string message = 3;
}

// Request message for retrieving data
message GetRequest {
    string token = 1;        // Authentication token
    string type = 2;         // Type of data (e.g., "view_assignments", "view_grades")
    string optional_data = 3; // Optional data for additional filtering (e.g., assignment ID)
}

// Response message for retrieving data
message GetResponse {
    bool status = 1;                         // Status of the operation
    repeated string data = 2;                // General data field for lists like assignments, grades, etc.
    repeated string pending_assignments = 3; // Pending assignments for the student
    repeated string submitted_assignments = 4; // Submitted assignments for the student
    string message = 5;                      // Optional message (used for responses with pending and submitted assignments)
}

// Request message for submitting data (POST)
message PostRequest {
    string token = 1;      // Authentication token
    string type = 2;       // Type of operation (e.g., "add_assignment", "submit_assignment")
    string data = 3;       // Data to be posted (e.g., assignment details, file path, doubt, etc.)
}

// Response message for submitting data (POST)
message PostResponse {
    bool status = 1;
    string message = 2;
}

// Request message for logging out
message LogoutRequest {
    string token = 1;
}

// Response message for logging out
message LogoutResponse {
    bool status = 1;
    string message = 2;
}

message GetUsersRequest {}

message GetUsersResponse {
    repeated User users = 1;
}

message User {
    string username = 1;
    string role = 2;
}

message UploadFileRequest {
    string assignment_name = 1;
    string student_name = 2;
    bytes file_content = 3;
    string file_name = 4;
}

message UploadFileResponse {
    bool status = 1;
    string message = 2;
}

message DownloadFileRequest {
    string assignment_name = 1;
    string student_name = 2;
}

message DownloadFileResponse {
    bool status = 1;
    bytes file_content = 2;
    string file_name = 3;
    string message = 4;
}

message AssignmentRequest {
    string id = 1;
    string name = 2;
    bytes file_content = 3;
}

message AssignmentResponse {
    string status = 1;  // Add this line to include the "status" field
    string message = 2;
}
message MaterialRequest {
    string name = 1;
    bytes file_content = 2;
}

message MaterialResponse {
    string status = 1;  // Add this line to include the "status" field
    string message = 2;
}

message AssignmentQuery {
    string id = 1;
    string name = 2;
}

message AssignmentDetails {
    string id = 1;
    string name = 2;
    string file_path = 3;
}

// Request message to view a submission
message ViewSubmissionRequest {
    string student_name = 1;  // The name of the student
}

// Response message listing assignments and providing file link
message ViewSubmissionResponse {
    repeated Assignment assignments = 1; // List of assignments for the student
    string file_url = 2;  // URL of the uploaded assignment file
    bool file_exists = 3; // Whether the file exists or not
}

// Represents an assignment
message Assignment {
    string assignment_id = 1;  // Unique ID of the assignment
    string assignment_name = 2;  // Name of the assignment
    string file_status = 3; // "Uploaded" or "Not Uploaded"
    string file_url = 4;  // Add this line
}
message ViewQuestionsRequest {}

message AssignmentQuestion {
    string assignment_id = 1;
    string assignment_name = 2;
    string file_url = 3;
}

message ViewQuestionsResponse {
    repeated AssignmentQuestion questions = 1;
}